{
	"info": {
		"_postman_id": "d10772ac-2987-42a3-b85e-8991cbd44071",
		"name": "Opportunity **BETA**",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create - Opportunity **BETA**",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9653ab67-d1f8-4bea-8125-1b38072ec3b9",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"if(jsonData && jsonData.Opportunity && jsonData.Opportunity.Data) {   ",
							"    pm.environment.set(\"OpportunityKey\", jsonData.Opportunity.Data.Key);",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{  \r\n      \"Data\":{  \r\n         \"Key\":null,\r\n         \"AbEntryKey\":\"{{AbEntryKey}}\",\r\n         \"Objective\":\"Example\",\r\n         \"Description\":\"This is an example opportunity.\\nIt was created using Maximizer.Web.Data in Postman!\",\r\n         \"Status\":2,\r\n         \"Cost\":1234.56,\r\n         \"ForecastRevenue\":2345.67,\r\n         \"StartDate\":\"2018-01-01\"\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/OpportunityCreate",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"OpportunityCreate"
					]
				},
				"description": "Use the `OpportunityCreate` method to create a new opportunity in the database.\n\nNOTE: You must run the `AbEntryCreate (Company)` request before running this one so that the `AbEntryKey` environment variable is set. NOTE: this functionality is currently of BETA/CTP quality (not ready for production usage)."
			},
			"response": []
		},
		{
			"name": "Create - Opportunity (All) **BETA**",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9653ab67-d1f8-4bea-8125-1b38072ec3b9",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"if(jsonData && jsonData.Opportunity && jsonData.Opportunity.Data) {   ",
							"    pm.environment.set(\"OpportunityKey\", jsonData.Opportunity.Data.Key);",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{  \r\n      \"Data\":{  \r\n         \"Key\":null,\r\n         \"AbEntryKey\":\"{{AbEntryKey}}\",\r\n         \"ContactKey\": \"Q29udGFjdAkxODA1MjMyNTIyMjc1ODM1NDAwMDFDCTE=\",\r\n         \"Objective\":\"Example\",\r\n         \"Description\":\"This is an example opportunity.\\nIt was created using Maximizer.Web.Data in Postman!\",\r\n         \"Status\":2,\r\n         \"Cost\":1234.56,\r\n         \"ForecastRevenue\":2345.67,\r\n         \"ActualRevenue\": 2345.60,\r\n         \"StartDate\":\"2018-01-01\",\r\n         \"CloseDate\":\"2018-01-01\",\r\n         \"Leader\": \"VXNlcglBTUlOQg==\",\r\n         \"SalesTeam\": \"U2FsZXNUZWFtCTY1NTM1\",\r\n         \"ReadOnly\": false,\r\n         \"SalesProcessKey\": null,\r\n         \"CurrentSalesStageKey\": null,\r\n         \"Comment\": \"Test\",\r\n         \"Reason\": 0,\r\n         \"Rating\": [\"57998\"],\r\n         \"Category\": [\"15\"],\r\n         \"Product\": [\"20\"]\r\n        }\r\n   }\r\n}\r\n"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/OpportunityCreate",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"OpportunityCreate"
					]
				},
				"description": "Use the `OpportunityCreate` method to create a new opportunity in the database.\n\nNOTE: You must run the `AbEntryCreate (Company)` request before running this one so that the `AbEntryKey` environment variable is set. NOTE: this functionality is currently of BETA/CTP quality (not ready for production usage)."
			},
			"response": []
		},
		{
			"name": "Read - Opportunity (Simple) **BETA**",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{  \r\n      \"Criteria\":{  \r\n         \"SearchQuery\":{  \r\n            \"Objective\":{  \r\n               \"$LIKE\":\"%\"\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{  \r\n         \"Fields\":{  \r\n            \"Key\":1,\r\n            \"AbEntryKey\":1,\r\n            \"ContactKey\":1,\r\n            \"Objective\":1,\r\n            \"Description\":1,\r\n            \"Status\":1,\r\n            \"Cost\":1,\r\n            \"ActualRevenue\":1,\r\n            \"ForecastRevenue\":1,\r\n            \"StartDate\":1,\r\n            \"CloseDate\":1\r\n         }\r\n      }\r\n   }\r\n}\r\n"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/OpportunityRead",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"OpportunityRead"
					]
				},
				"description": "Use the `OpportunityRead` method to search for opportunities in the database. NOTE: this functionality is currently of BETA/CTP quality (not ready for production usage)."
			},
			"response": []
		},
		{
			"name": "Read - Opportunity (Detailed) **BETA**",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{  \r\n      \"Criteria\":{  \r\n         \"SearchQuery\":{  \r\n            \"$OR\":[  \r\n               {  \r\n                  \"CreationDate\":{  \r\n                     \"$RANGE\":[  \r\n                        \"2018-02-01\",\r\n                        \"2018-02-28\"\r\n                     ]\r\n                  }\r\n               },\r\n               {  \r\n                  \"Status\":{  \r\n                     \"$IN\":[  \r\n                        1,\r\n                        2\r\n                     ]\r\n                  }\r\n               }\r\n            ]\r\n         }\r\n      },\r\n      \"Scope\":{  \r\n         \"Fields\":{  \r\n            \"Key\":1,\r\n            \"AbEntry\":{  \r\n               \"Key\":1,\r\n               \"CompanyName\":1,\r\n               \"Email\":1,\r\n               \"Phone\":1\r\n            },\r\n            \"AbEntryKey\":1,\r\n            \"Contact\":{  \r\n               \"Key\":1,\r\n               \"FirstName\":1,\r\n               \"LastName\":1\r\n            },\r\n            \"ContactKey\":1,\r\n            \"Objective\":1,\r\n            \"Description\":1,\r\n            \"Status\":1,\r\n            \"Cost\":{  \r\n               \"Value\":1,\r\n               \"DisplayValue\":1,\r\n               \"CurrencyCode\":1\r\n            },\r\n            \"ActualRevenue\":{  \r\n               \"Value\":1,\r\n               \"DisplayValue\":1,\r\n               \"CurrencyCode\":1\r\n            },\r\n            \"ForecastRevenue\":{  \r\n               \"Value\":1,\r\n               \"DisplayValue\":1,\r\n               \"CurrencyCode\":1\r\n            },\r\n            \"StartDate\":1,\r\n            \"CloseDate\":1,\r\n            \"Creator\":{  \r\n               \"Key\":{  \r\n                  \"Value\":1,\r\n                  \"UID\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            },\r\n            \"CreationDate\":1,\r\n            \"ModifiedBy\":{  \r\n               \"Key\":{  \r\n                  \"Value\":1,\r\n                  \"UID\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            },\r\n            \"LastModifyDate\":1,\r\n            \"Leader\":{  \r\n               \"Key\":{  \r\n                  \"Value\":1,\r\n                  \"UID\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            },\r\n            \"SalesTeam\":{  \r\n               \"Key\":{  \r\n                  \"Value\":1,\r\n                  \"ID\":1\r\n               },\r\n               \"DisplayName\":1\r\n            },\r\n            \"ReadOnly\":1,\r\n            \"SalesProcessKey\":1,\r\n            \"SalesProcess\":1,\r\n            \"CurrentSalesStageKey\":1,\r\n            \"CurrentSalesStage\":{\r\n               \"Key\":{  \r\n                  \"Value\":1,\r\n                  \"ID\":1\r\n               }\r\n            },\r\n            \"CurrentSalesStageAge\":1,\r\n            \"Category\":[  \r\n               {  \r\n                  \"Key\":1,\r\n                  \"Value\":1\r\n               }\r\n            ],\r\n            \"Product\":[  \r\n               {  \r\n                  \"Key\":1,\r\n                  \"Value\":1\r\n               }\r\n            ]\r\n         }\r\n      }\r\n   }\r\n}\r\n"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/OpportunityRead",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"OpportunityRead"
					]
				},
				"description": "Use the `OpportunityRead` method to search for opportunities in the database. NOTE: this functionality is currently of BETA/CTP quality (not ready for production usage)."
			},
			"response": []
		},
		{
			"name": "Read - Opportunity (ALL) **BETA**",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5c830d2-115c-44ef-8ef3-4b0832019a18",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{\r\n      \"Criteria\":{\r\n         \"SearchQuery\":{\r\n            \"$OR\":[\r\n               {\r\n                  \"CreationDate\":{\r\n                     \"$RANGE\":[\r\n                        \"2018-02-01\",\r\n                        \"2018-02-28\"\r\n                     ]\r\n                  }\r\n               },\r\n               {\r\n                  \"Status\":{\r\n                     \"$IN\":[\r\n                        1,\r\n                        2\r\n                     ]\r\n                  }\r\n               }\r\n            ]\r\n         }\r\n      },\r\n      \"Scope\":{\r\n         \"Fields\":{\r\n            \"Key\":1,\r\n            \"AbEntry\":{\r\n               \"Key\":1,\r\n               \"CompanyName\":1,\r\n               \"Email\":1,\r\n               \"Phone\":1\r\n            },\r\n            \"AbEntryKey\":1,\r\n            \"Contact\":{\r\n               \"Key\":1,\r\n               \"FirstName\":1,\r\n               \"LastName\":1\r\n            },\r\n            \"Objective\":1,\r\n            \"Description\":1,\r\n            \"Status\":1,\r\n            \"Cost\":1,\r\n            \"ActualRevenue\":1,\r\n            \"ForecastRevenue\":1,\r\n            \"StartDate\":1,\r\n            \"CloseDate\":1,\r\n            \"Creator\":1,\r\n            \"CreationDate\":1,\r\n            \"ModifiedBy\":1,\r\n            \"LastModifyDate\":1,\r\n            \"Leader\":{\r\n               \"Key\":{\r\n                  \"Value\":1,\r\n                  \"UID\":1\r\n               },\r\n               \"DisplayValue\":1\r\n            },\r\n            \"SalesTeam\":{\r\n               \"Key\":{\r\n                  \"Value\":1,\r\n                  \"ID\":1\r\n               },\r\n               \"DisplayName\":1\r\n            },\r\n            \"ReadOnly\":1,\r\n            \"SalesProcessKey\":1,\r\n            \"SalesProcess\":1,\r\n            \"CurrentSalesStageKey\":1,\r\n            \"CurrentSalesStage\":1,\r\n            \"CurrentSalesStageAge\":1,\r\n            \"Comment\":1,\r\n            \"Reason\":1,\r\n            \"Rating\":1,\r\n            \"Category\":[\r\n               {\r\n                  \"Key\":1,\r\n                  \"Value\":1\r\n               }\r\n            ],\r\n            \"Product\":[\r\n               {\r\n                  \"Key\":1,\r\n                  \"Value\":1\r\n               }\r\n            ]\r\n         }\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/OpportunityRead",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"OpportunityRead"
					]
				},
				"description": "Use the `OpportunityRead` method to search for opportunities in the database. NOTE: this functionality is currently of BETA/CTP quality (not ready for production usage)."
			},
			"response": []
		},
		{
			"name": "Update - Opportunity **BETA**",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f65194a6-1d00-4b45-bd83-f6cfa61a776e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{  \r\n      \"Data\":{  \r\n         \"Key\":\"{{OpportunityKey}}\",\r\n         \"Objective\":\"Postman Example\",\r\n         \"Status\":3,\r\n         \"ActualRevenue\":3456.78,\r\n         \"CloseDate\":\"2018-02-01\"\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/OpportunityUpdate",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"OpportunityUpdate"
					]
				},
				"description": "Use the `OpportunityUpdate` method to update an existing opportunity in the database.\n\nNOTE: You must run the `OpportunityCreate` request *before* running this one so that the `OpportunityKey` environment variable is set. NOTE: this functionality is currently of BETA/CTP quality (not ready for production usage)."
			},
			"response": []
		},
		{
			"name": "Delete - Opportunity **BETA**",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bff0213b-d50c-4bc0-89e1-a399412b5a9b",
						"type": "text/javascript",
						"exec": [
							"var jsonData = pm.response.json();",
							"if(jsonData.Code === 0) {",
							"    pm.environment.unset(\"OpportunityKey\");",
							"}"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{  \r\n      \"Data\":{  \r\n         \"Key\":\"{{OpportunityKey}}\"\r\n      }\r\n   }\r\n}"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/OpportunityDelete",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"OpportunityDelete"
					]
				},
				"description": "Use the `OpportunityDelete` method to delete an opportunity from the database.\n\nNOTE: You must run the `OpportunityCreate` request *before* running this one so that the `OpportunityKey` environment variable is set. NOTE: this functionality is currently of BETA/CTP quality (not ready for production usage)."
			},
			"response": []
		},
		{
			"name": "Metadata - Opportunity **BETA**",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f65194a6-1d00-4b45-bd83-f6cfa61a776e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"Token\":\"{{Token}}\",\r\n   \"Schema\":{  \r\n      \"Criteria\":{  \r\n         \"SearchQuery\":{  \r\n            \"AppliesTo\":{  \r\n               \"$IN\":[  \r\n                  \"Opportunity\"\r\n               ]\r\n            }\r\n         }\r\n      },\r\n      \"Scope\":{  \r\n         \"Fields\":{  \r\n            \"Key\":1,\r\n            \"Type\":1,\r\n            \"Name\":1,\r\n            \"Folder\":1\r\n         }\r\n      }\r\n   }\r\n}\r\n"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/SchemaRead",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"SchemaRead"
					]
				},
				"description": "Use the `SchemaRead` method to query the structure or metadata of entities in the database. NOTE: this functionality is currently of BETA/CTP quality (not ready for production usage)."
			},
			"response": []
		},
		{
			"name": "Options - Opportunity (Generic) **BETA**",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a80ef56b-4f61-4c4d-845d-3f94a66d7dfb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{  \r\n      \"Options\":{  \r\n         \"Objective\":1,\r\n         \"Status\":1,\r\n         \"Creator\":1,\r\n         \"ModifiedBy\":1,\r\n         \"Leader\":1,\r\n         \"SalesTeam\":1,\r\n         \"Reason\":1,\r\n         \"Category\":1,\r\n         \"Product\":1\r\n      }\r\n   }\r\n}\r\n"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/OpportunityGetFieldOptions",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"OpportunityGetFieldOptions"
					]
				},
				"description": "Use the `OpportunityGetFieldOptions` method to retrieve the options for table-valued fields of Opportunity objects. NOTE: this functionality is currently of BETA/CTP quality (not ready for production usage)."
			},
			"response": []
		},
		{
			"name": "Options - Opportunity (Specific Entry) **BETA**",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a80ef56b-4f61-4c4d-845d-3f94a66d7dfb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "f58ae501-fb89-4229-9f66-589a9979a71a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{  \r\n   \"Token\":\"{{Token}}\",\r\n   \"Opportunity\":{  \r\n      \"Data\":{  \r\n         \"Key\":\"{{OpportunityKey}}\"\r\n      },\r\n      \"Options\":{  \r\n         \"Objective\":1,\r\n         \"Status\":[  \r\n            {  \r\n               \"Key\":1,\r\n               \"Value\":1\r\n            }\r\n         ],\r\n         \"Creator\":{  \r\n            \"Key\":{  \r\n               \"Value\":1,\r\n               \"UID\":1\r\n            },\r\n            \"DisplayValue\":1\r\n         },\r\n         \"ModifiedBy\":{  \r\n            \"Key\":{  \r\n               \"Value\":1,\r\n               \"UID\":1\r\n            },\r\n            \"DisplayValue\":1\r\n         },\r\n         \"Leader\":{  \r\n            \"Key\":{  \r\n               \"Value\":1,\r\n               \"UID\":1\r\n            },\r\n            \"DisplayValue\":1\r\n         },\r\n         \"SalesTeam\":{  \r\n            \"Key\":{  \r\n               \"Value\":1,\r\n               \"ID\":1\r\n            },\r\n            \"DisplayName\":1\r\n         },\r\n         \"Reason\":[  \r\n            {  \r\n               \"Key\":1,\r\n               \"DisplayValue\":1\r\n            }\r\n         ],\r\n         \"Category\":[  \r\n            {  \r\n               \"Key\":1,\r\n               \"Value\":1\r\n            }\r\n         ],\r\n         \"Product\":[  \r\n            {  \r\n               \"Key\":1,\r\n               \"Value\":1\r\n            }\r\n         ]\r\n      }\r\n   }\r\n}\r\n"
				},
				"url": {
					"raw": "{{BaseURL}}/Data.svc/json/OpportunityGetFieldOptions",
					"host": [
						"{{BaseURL}}"
					],
					"path": [
						"Data.svc",
						"json",
						"OpportunityGetFieldOptions"
					]
				},
				"description": "Use the `OpportunityGetFieldOptions` method to retrieve the options for table-valued fields of Opportunity objects. If you include the Key of an existing Opportunity, the options specific to that entry are retrieved.\n\nNOTE: You must run the `OpportunityCreate` request *before* running this one so that the `OpportunityKey` environment variable is set. NOTE: this functionality is currently of BETA/CTP quality (not ready for production usage)."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "33dac295-5bfe-4edf-9184-8aa91913bfb8",
				"type": "text/javascript",
				"exec": [
					"// This script checks to see if there is a valid token in",
					"// the environment before making any requests to the API",
					"// by calling the TokenValid method. If there is already a",
					"// valid token, it does nothing. If there is no token or if",
					"// the token is not valid, it attempts to obtain a new one",
					"// by calling the Authenticate method, and if successful, ",
					"// saves the token to the environment.",
					"",
					"// Get the API URL and check to make sure it is non-empty",
					"const baseURL = pm.environment.get(\"BaseURL\");",
					"if(!baseURL) {",
					"    console.error(\"The BaseURL environment variable is not set.\");",
					"    return;",
					"}",
					"",
					"// We don't want to do this when calling the Authenticate or",
					"// TokenValid methods, since the purpose of those methods is",
					"// to call the very methods that we're calling below",
					"if(pm.info.requestName.startsWith(\"Authenticate\") || pm.info.requestName === \"TokenValid\") {",
					"    return;",
					"}",
					"",
					"// Check to see if there is already a Token in the environment variable",
					"let token = pm.environment.get(\"Token\");",
					"if(token) {",
					"    // If there is a Token, see if it is still valid",
					"    DoTokenValidRequest(token);",
					"} else {",
					"    // If there is no Token, just call Authenticate",
					"    DoAuthenticateRequest();",
					"}",
					"",
					"//----------------",
					"//Helper Functions",
					"//----------------",
					"",
					"// Calls the TokenValid method",
					"function DoTokenValidRequest(token) {",
					"    console.info(\"Checking to see if token is valid...\");",
					"    // Construct the TokenValid request",
					"    let tokenValidRequest = {",
					"      url: pm.environment.get(\"BaseURL\") + \"/Data.svc/json/TokenValid\",",
					"      method: \"POST\",",
					"      body: {",
					"        mode: \"raw\",",
					"        raw: JSON.stringify({ \"Token\" : pm.environment.get(\"Token\") })",
					"      }",
					"    };",
					"    ",
					"    // Send the TokenValid request to the API",
					"    pm.sendRequest(tokenValidRequest, HandleTokenValidResponse); ",
					"}",
					"",
					"// Handles the TokenValid method response, and calls the ",
					"// Authenticate method if necessary.",
					"function HandleTokenValidResponse(err, res) {",
					"    if(err || !res) {",
					"        // Something went wrong when trying to call the API",
					"        console.error(\"An error occurred when trying to call the TokenValid method.\");",
					"    } else {",
					"        // Check to see if the method was successful",
					"        let jsonData = res.json();",
					"        if(jsonData.Code === 0) {",
					"            console.info(\"The current token is valid.\");",
					"        } else {",
					"            DoAuthenticateRequest();",
					"        }",
					"    }",
					"}",
					"",
					"// Calls the Authenticate method",
					"function DoAuthenticateRequest() {",
					"    // The token is not valid, so we will try to get a new one.",
					"    // Create the Authenticate request body.",
					"    console.info(\"Token is missing or invalid; requesting a new one...\");",
					"    let requestBody = {",
					"        \"Database\": pm.environment.get(\"Database\"),",
					"        \"UID\": pm.environment.get(\"UID\"),",
					"        \"Password\": pm.environment.get(\"Password\")",
					"    };",
					"    ",
					"    // Check to see if the VendorId and AppKey are set, and if",
					"    // they are, add them to the request.",
					"    if(pm.environment.get(\"VendorId\") && pm.environment.get(\"AppKey\")) {",
					"        requestBody.VendorId = pm.environment.get(\"VendorId\");",
					"        requestBody.AppKey = pm.environment.get(\"AppKey\");",
					"    }",
					"    ",
					"    // Create the request object",
					"    let authenticateRequest = {",
					"      url: pm.environment.get(\"BaseURL\") + \"/Data.svc/json/Authenticate\",",
					"      method: \"POST\",",
					"      body: {",
					"        mode: \"raw\",",
					"        raw: JSON.stringify(requestBody)",
					"      }",
					"    };",
					"    ",
					"    // Send the Authenticate request to the API",
					"    pm.sendRequest(authenticateRequest, HandleAuthenticateResponse);    ",
					"}",
					"",
					"// Handles the Authenticate method response and stores the",
					"// new token in the \"Token\" environment variable.",
					"function HandleAuthenticateResponse(err, res) {",
					"    if(err || !res) {",
					"        // The request failed",
					"        console.error(\"An error occurred when trying to call the Authenticate method.\");",
					"    } else {",
					"        // The request succeeded",
					"        let jsonData = res.json();",
					"        if(jsonData.Code === 0) {",
					"            // Store the new token in the environment variable",
					"            // so that we can use it in subsequent requests",
					"            console.info(\"Retrieved new token.\");",
					"            pm.environment.set(\"Token\", jsonData.Data.Token);",
					"        } else {",
					"            // A nonzero Code means that there was an error",
					"            console.error(\"Authentication failed. Check the credentials in the environment.\");",
					"        }",
					"    }",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "bacb7532-e4fd-46fb-9aa6-7737423bea45",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"pm.test(\"Response Code is 0\", function () {",
					"    var jsonData = pm.response.json();",
					"    pm.expect(jsonData.Code).to.eql(0);",
					"});",
					""
				]
			}
		}
	]
}